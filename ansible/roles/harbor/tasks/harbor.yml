---
# download harbor tarball
- name: create install dir1
  file:
    path: '{{ harbor_download_dir }}'
    state: directory
#- name: Download tarball
#  get_url:
#    url: '{{ horbor_online_installer_url }}'
#    dest: '{{ harbor_download_dir }}/{{ harbor_installer_tgz_name }}'
- name: create destination dir1
  file:
    path: '{{ harbor_dest_dir }}'
    state: directory
#- name: Extract harbor_installer_tgz into /var/lib/foo
#  unarchive:
#    src: '{{ harbor_download_dir }}/{{ harbor_installer_tgz_name }}'
#    dest: '{{ harbor_dest_dir }}'
#    remote_src: yes
- name: upload harbor.cfg from template
  template:
    src: harbor.cfg.j2
    dest: '{{ harbor_dest_dir }}/harbor/harbor.cfg'
    mode: 0644
    backup: yes
- name: replace docker-compose file
  copy:
    src: "docker-compose.yml"
    dest: "{{ harbor_dest_dir }}/harbor/docker-compose.yml"
  register: compose_file
- name: replace docker-compose.clair file
  copy:
    src: "docker-compose.clair.yml"
    dest: "{{ harbor_dest_dir }}/harbor/docker-compose.clair.yml"
  register: compose_fil
- name: replace docker-compose.chartmuseum file
  copy:
    src: "docker-compose.chartmuseum.yml"
    dest: "{{ harbor_dest_dir }}/harbor/docker-compose.chartmuseum.yml"
  register: compose_fil

- name: replace core app.conf file
  template:
    src: "core-app.conf.j2"
    dest: "{{ harbor_dest_dir }}/harbor/common/templates/core/app.conf"
    mode: 0644

# - name: replace docker-compose.notary file
#   copy:
#     src: "docker-compose.notary.yml"
#     dest: "{{ harbor_dest_dir }}/harbor/docker-compose.notary.yml"
#   register: compose_fil

# - name: replace notary signer env file
#   template:
#     src: "notary_signer_env.j2"
#     dest: "{{ harbor_dest_dir }}/harbor/common/templates/notary/signer_env"
#     mode: 0644

# Run install.sh to install and start Harbor;
- name: Run the install command.
  become: True
  become_method: 'sudo'
  command: '{{ harbor_dest_dir }}/harbor/install.sh --with-clair --with-chartmuseum'
  when: groups['harbor'][0] == ansible_default_ipv4.address
