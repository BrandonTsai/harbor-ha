- name: install mysql-client
  apt:
    name: ["mysql-client"]
    state: present
  become: yes
- name: create mariaDB dir
  file:
    path: "{{ db_dir }}"
    state: directory
- name: create mariaDB data dir
  file:
    path: "{{ db_dir }}/data"
    state: directory
    mode: 0777
- name: copy docker-compose file for mariaDB
  template:
    src: docker-compose.yml.j2
    dest: "{{ db_dir }}/docker-compose.yml"
  register: compose_file
- name: create mariaDB config dir
  file:
    path: "{{ db_dir }}/config"
    state: directory
- name: copy my.cnf
  template:
    src: my.cnf.j2
    dest: "{{ db_dir }}/config/my.cnf"
    mode: 0755
  register: config
- name: mysql init scripts
  template:
    src: db_init.sql.j2
    dest: "{{ db_dir }}/config/db_init.sql"
    mode: 0755
- name: pull images
  shell: "docker-compose -f {{ db_dir }}/docker-compose.yml pull"
  register: docker_pull
- name: remove old container
  shell: "docker-compose -f {{ db_dir }}/docker-compose.yml down"
  ignore_errors: yes
- name: launch container
  shell: "docker-compose -f {{ db_dir }}/docker-compose.yml up -d"
- name: init database
  shell: "docker-compose -f {{ db_dir }}/docker-compose.yml exec mariadb /bin/bash -c 'mysql -p{{harbor_db_root_password}} {{harbor_db}} < /opt/db_init.sql'"
  register: init_result
  until: init_result.rc == 0
  retries: 12
  delay: 5
  ignore_errors: yes
- name: get master status
  shell: "docker-compose -f {{ db_dir }}/docker-compose.yml exec mariadb /bin/bash -c 'mysql -p{{harbor_db_root_password}} {{harbor_db}} -e \"SHOW MASTER STATUS;\"' | grep 'mariadb-bin' | awk '{print $4}'"
  register: master_status
- name: show slave setting command
  debug:
    msg:
      - "STOP SLAVE; CHANGE MASTER TO MASTER_HOST = '{{ansible_default_ipv4.address}}', MASTER_USER = '{{harbor_db_user}}', MASTER_PASSWORD = '{{harbor_db_password}}', MASTER_LOG_FILE = 'mariadb-bin.000001', MASTER_LOG_POS = {{master_status.stdout}}; START SLAVE;"
      - "SHOW SLAVE STATUS \\G"