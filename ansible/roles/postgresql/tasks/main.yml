- name: install postgresql-client
  apt:
    name: ["postgresql-client"]
    state: present
  become: yes
- name: create postgresql dir
  file:
    path: "{{ db_dir }}"
    state: directory
- name: create postgresql dir
  file:
    path: "{{ db_dir }}/config"
    state: directory
- name: create postgresql data dir
  file:
    path: "{{ db_data_dir }}"
    state: directory
    mode: 0777
- name: copy docker-compose file for postgresql
  template:
    src: docker-compose.yml.j2
    dest: "{{ db_dir }}/docker-compose.yml"
  register: compose_file
- name: replace postgresql env file
  template:
    src: "postgresql/{{server_role}}-env.j2"
    dest: "{{ db_dir }}/config/env"
    backup: yes
  register: db_env
# - name: init scripts
#   template:
#     src: db_init.sql.j2
#     dest: "{{ db_dir }}/config/db_init.sql"
#     mode: 0755
- name: pull images
  shell: "docker-compose -f {{ db_dir }}/docker-compose.yml pull"
  register: docker_pull
- name: remove old container
  shell: "docker-compose -f {{ db_dir }}/docker-compose.yml down"
  ignore_errors: yes
- name: launch container
  shell: "docker-compose -f {{ db_dir }}/docker-compose.yml up -d"
- name: init database
  shell: "docker-compose -f {{ db_dir }}/docker-compose.yml exec postgresql /bin/bash -c 'psql -u postgres -c \" CREATE DATABASE clair;\"' "
  register: init_result
  until: init_result.rc == 0
  retries: 12
  delay: 5
  ignore_errors: yes